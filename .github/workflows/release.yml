name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  # Android Build Job
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.3"
          channel: "stable"

      - name: Create .env file
        run: echo "${{ secrets.ENV }}" > .env

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release --dart-define-from-file=.env

      - name: Build Android App Bundle
        run: flutter build appbundle --release --dart-define-from-file=.env

      - name: Rename Android files
        run: |
          cp build/app/outputs/flutter-apk/app-release.apk admin_panel.apk
          cp build/app/outputs/bundle/release/app-release.aab admin_panel.aab

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            admin_panel.apk
            admin_panel.aab

  # Windows Build Job
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.3"
          channel: "stable"

      - name: Create .env file
        run: echo "${{ secrets.ENV }}" > .env

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release --dart-define-from-file=.env

      - name: Install NSIS
        run: choco install nsis -y

      - name: Create NSIS installer script
        run: |
          $script = @"
          !include "MUI2.nsh"

          Name "Admin Panel"
          OutFile "admin_panel_installer.exe"
          InstallDir `$PROGRAMFILES\AdminPanel
          RequestExecutionLevel admin

          !insertmacro MUI_PAGE_WELCOME
          !insertmacro MUI_PAGE_DIRECTORY
          !insertmacro MUI_PAGE_INSTFILES
          !insertmacro MUI_PAGE_FINISH

          !insertmacro MUI_UNPAGE_WELCOME
          !insertmacro MUI_UNPAGE_CONFIRM
          !insertmacro MUI_UNPAGE_INSTFILES
          !insertmacro MUI_UNPAGE_FINISH

          !insertmacro MUI_LANGUAGE "English"

          Section "Install"
            SetOutPath `$INSTDIR
            File /r "build\windows\x64\runner\Release\*.*"
            CreateShortcut "`$DESKTOP\Admin Panel.lnk" "`$INSTDIR\admin_panel.exe"
            CreateDirectory "`$SMPROGRAMS\Admin Panel"
            CreateShortcut "`$SMPROGRAMS\Admin Panel\Admin Panel.lnk" "`$INSTDIR\admin_panel.exe"
            CreateShortcut "`$SMPROGRAMS\Admin Panel\Uninstall.lnk" "`$INSTDIR\uninstall.exe"
            WriteUninstaller "`$INSTDIR\uninstall.exe"
          SectionEnd

          Section "Uninstall"
            Delete "`$DESKTOP\Admin Panel.lnk"
            RMDir /r "`$SMPROGRAMS\Admin Panel"
            RMDir /r "`$INSTDIR"
          SectionEnd
          "@
          $script | Out-File -FilePath "installer.nsi" -Encoding UTF8

      - name: Build installer
        run: |
          & "C:\Program Files (x86)\NSIS\makensis.exe" installer.nsi

      - name: Package Windows build
        run: |
          Compress-Archive -Path "build\windows\x64\runner\Release\*" -DestinationPath "admin_panel_windows.zip"

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            admin_panel_installer.exe
            admin_panel_windows.zip

  # Release Job - Depends on Android and Windows builds
  create-release:
    needs: [build-android, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            admin_panel.apk
            admin_panel.aab
            admin_panel_installer.exe
            admin_panel_windows.zip
          name: Release ${{ github.ref_name }}
          body: |
            ## Downloads

            ### Android
            - **APK**: `admin_panel.apk` - For sideloading on Android devices
            - **AAB**: `admin_panel.aab` - For Google Play Store distribution

            ### Windows
            - **Installer**: `admin_panel_installer.exe` - Windows installer with shortcuts
            - **Portable**: `admin_panel_windows.zip` - Portable Windows application

            ## Installation Instructions

            ### Android
            1. Download `admin_panel.apk`
            2. Enable "Install from unknown sources" in Android settings
            3. Install the APK file

            ### Windows
            1. **Easy Install**: Download and run `admin_panel_installer.exe`
            2. **Portable**: Download `admin_panel_windows.zip`, extract and run `admin_panel.exe`
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
